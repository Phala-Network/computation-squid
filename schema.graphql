type GlobalState @entity {
  "constant 0"
  id: ID!
  height: Int!
  totalValue: BigDecimal!
  averageBlockTimeUpdatedHeight: Int!
  averageBlockTimeUpdatedTime: DateTime!
  averageBlockTime: Int!
  averageAprMultiplierUpdatedTime: DateTime!
  averageAprMultiplier: BigDecimal!
  "for apr calculation"
  idleWorkerShares: BigDecimal!
}

enum IdentityLevel {
  Unknown
  FeePaid
  Reasonable
  KnownGood
  OutOfDate
  LowQuality
  Erroneous
}

type Account @entity {
  "account address"
  id: ID!
  basePool: BasePool @derivedFrom(field: "account")
  ownedPools: [BasePool!]! @derivedFrom(field: "owner")
  identityDisplay: String
  identityLevel: IdentityLevel
  # subIdentity: String
  # super: Account
  stakePoolValue: BigDecimal!
  stakePoolNftCount: Int!
  stakePoolAvgAprMultiplier: BigDecimal!
  vaultValue: BigDecimal!
  vaultNftCount: Int!
  vaultAvgAprMultiplier: BigDecimal!
  delegations: [Delegation!]! @derivedFrom(field: "account")
}

enum BasePoolKind {
  Vault
  StakePool
}

type BasePool @entity {
  "pid"
  id: ID!
  "numeric pid for sorting"
  pid: BigInt!
  "NFT collection id"
  cid: Int!
  owner: Account!
  account: Account! @unique
  kind: BasePoolKind!
  "decimal percentage, 1 means 100%"
  commission: BigDecimal!
  vault: Vault @derivedFrom(field: "basePool")
  stakePool: StakePool @derivedFrom(field: "basePool")
  aprMultiplier: BigDecimal!
  totalShares: BigDecimal!
  totalValue: BigDecimal!
  sharePrice: BigDecimal!
  freeValue: BigDecimal!
  releasingValue: BigDecimal!
  withdrawalValue: BigDecimal!
  withdrawalShares: BigDecimal!
  delegatorCount: Int!
  whitelistEnabled: Boolean!
  whitelists: [BasePoolWhitelist!] @derivedFrom(field: "basePool")
  delegations: [Delegation!] @derivedFrom(field: "basePool")
}

type Vault @entity {
  "pid"
  id: ID!
  basePool: BasePool! @unique
  "share price of owner's last gain"
  lastSharePriceCheckpoint: BigDecimal!
  claimableOwnerShares: BigDecimal!
}

type StakePool @entity {
  "pid"
  id: ID!
  basePool: BasePool! @unique
  "null means infinite"
  capacity: BigDecimal
  "null means infinite"
  delegable: BigDecimal
  ownerReward: BigDecimal!
  workerCount: Int!
  idleWorkerCount: Int!
  idleWorkerShares: BigDecimal!
  workers: [Worker!]! @derivedFrom(field: "stakePool")
}

type Delegation @entity {
  "${pid}-${accountId}"
  id: ID!
  account: Account!
  basePool: BasePool!
  value: BigDecimal!
  shares: BigDecimal!
  withdrawalValue: BigDecimal!
  withdrawalShares: BigDecimal!
  withdrawalStartTime: DateTime
  delegationNft: DelegationNft
  withdrawalNft: DelegationNft
}

type DelegationNft @entity {
  "${cid}-${nftId}"
  id: ID!
  owner: Account!
  cid: Int!
  nftId: Int!
}

type BasePoolWhitelist @entity {
  "${pid}-${accountId}"
  id: ID!
  account: Account!
  basePool: BasePool!
  createTime: DateTime!
}

type Worker @entity {
  "worker public key"
  id: ID!
  stakePool: StakePool
  session: Session
  confidenceLevel: Int!
  initialScore: Int
  shares: BigDecimal
}

enum WorkerState {
  Ready
  WorkerIdle
  WorkerUnresponsive
  WorkerCoolingDown
}

type Session @entity {
  "session account address"
  id: ID!
  isBound: Boolean!
  stakePool: StakePool
  worker: Worker
  stake: BigDecimal!
  state: WorkerState!
  v: BigDecimal!
  ve: BigDecimal!
  pInit: Int!
  pInstant: Int!
  totalReward: BigDecimal!
  coolingDownStartTime: DateTime
}

type DelegationValueRecord @entity {
  id: ID!
  "block time"
  updatedTime: DateTime!
  account: Account!
  value: BigDecimal!
}

type RewardRecord @entity {
  id: ID!
  "block time"
  time: DateTime!
  value: BigDecimal!
}
